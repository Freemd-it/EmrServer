{"version":3,"sources":["../../Service/LoginService.js"],"names":["uuid","require","crypto","jwt","moment","encryption","auth","key","algorithm","hash","createHash","hashedContent","update","digest"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,WAAR,CAAX;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACA,IAAIE,MAAMF,QAAQ,YAAR,CAAV,C,CAAiC;AACjC,IAAIG,SAASH,QAAQ,QAAR,CAAb;;AAGA;;;;;;;;AAQA,SAASI,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,EAAyC;AACrC,QAAIC,OAAOP,OAAOQ,UAAP,CAAkBF,SAAlB,CAAX;AACA,QAAIG,gBAAgBF,KAAKG,MAAL,CAAYN,OAAKC,GAAjB,CAApB;AACAI,oBAAgBF,KAAKI,MAAL,CAAY,KAAZ,CAAhB;AACA,WAAOF,aAAP;AACH","file":"LoginService.js","sourcesContent":["var uuid = require('node-uuid');\r\nvar crypto = require(\"crypto\");\r\nvar jwt = require('jwt-simple'); // Json Web Token 방식 사용할까\r\nvar moment = require('moment');\r\n\r\n\r\n/*\r\n\r\n사용될 리소스 코드 부분\r\n\r\nvar token = req.body.token || req.query.token || req.headers['x-access-token']; >> Request 받아서\r\n\r\n*/\r\n\r\nfunction encryption(auth, key, algorithm){\r\n    var hash = crypto.createHash(algorithm);\r\n    var hashedContent = hash.update(auth+key);\r\n    hashedContent = hash.digest('hex');\r\n    return hashedContent;\r\n}\r\n"]}