{"version":3,"sources":["../Main.js"],"names":["express","require","path","favicon","logger","cookieParser","bodyParser","os","cluster","compression","util","domain","create","methodOverride","traceback","http","process","config","sessionService","redisService","routesService","dbService","global","app","cpuNo","cpus","length","schedulingPolicy","SCHED_RR","Cluster","Master","console","log","i","worker","fork","on","format","id","code","signal","error","stack","name","line","Worker","workerId","disconnect","exception","run","ProcessRun","set","env","PORT","serverConfig","port","use","cookie_secret","json","urlencoded","extended","trust_proxy_host","Init","createServer","listen","get","pid","isMaster"],"mappings":"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","file":"Main.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar os = require('os');\nvar cluster = require('cluster');\nvar compression = require('compression');\nvar util = require('util');\nvar domain = require('domain').create();\nvar methodOverride = require('method-override');\nvar traceback = require('traceback');\nvar http = require('http');\nvar process = require('process');\n\nvar config = require('./Common/Config.js');\nvar sessionService = require('./Service/SessionService.js');\nvar redisService = require('./Service/RedisService.js');\nvar routesService = require('./Service/RoutesService.js');\nvar dbService = require('./Service/DBService.js');\n\nglobal.app = new express();\n\nvar cpuNo = os.cpus().length;\ncluster.schedulingPolicy = cluster.SCHED_RR; // 라운드 로빈 방식으로 클러스터링 방식 지정\n\nvar Cluster = function(){};\n\nCluster.Master = function(){\n\n    console.log(\"## Master Cluster Start ##\");\n\n    for(var i = 0; i < cpuNo; i++){\n\n        var worker = cluster.fork();\n    }\n\n    cluster.on(\"disconnect\", function(worker){\n\n        console.log(util.format(\"## [master] worker id : %d exit successfully ##\", worker.id));\n    });\n\n    cluster.on(\"exit\", function(worker, code, signal){\n\n        console.log(\"## [master] worker process id : \"+worker.process.id+\" died ##\");\n    });\n\n    cluster.on(\"uncaughtException\", function(error){\n\n        console.log(\"## [master] server uncaughtexception ##\");\n        console.log(\"## [master] uncaughtexception : \"+error+\" ##\");\n        console.log(\"## [master] error call stack : \"+error.stack+\" ##\");\n\n        var stack = traceback();\n        for(var i = 0; i < stack.length; i++){\n\n            console.log(\"## [master] callbackstack : \" + i + \" function : \" + stack[i].name + \" at line : \" + stack[i].line + \" ##\");\n        }\n    });\n}\n\nCluster.Worker = function(workerId){\n\n    domain.on(\"error\", function(error){\n\n        try{\n            console.log(util.format(\"## [worker][%d] server uncaughtexception ##\", workerId));\n            console.log(util.format(\"## [worker][%d] uncaughtexception : \"+error+\" ##\", workerId));\n            console.log(util.format(\"## [worker][%d] error call stack : \"+error.stack+\" ##\", workerId));\n\n            var stack = traceback();\n            for(var i = 0; i < stack.length; i++){\n\n                console.log(\"## [worker] callbackstack : \" + i + \" function : \" + stack[i].name + \" at line : \" + stack[i].line + \" ##\");\n            }\n            cluster.worker.disconnect();\n        }\n        catch(exception){\n\n            console.log(util.format(\"## [worker][%d] server uncaughtexception ##\", workerId));\n            console.log(util.format(\"## [worker][%d] uncaughtexception : \"+error+\" ##\", workerId));\n            console.log(util.format(\"## [worker][%d] error call stack : \"+error.stack+\" ##\", workerId));\n\n            var stack = traceback();\n            for(var i = 0; i < stack.length; i++){\n\n                console.log(\"## [worker] callbackstack : \" + i + \" function : \" + stack[i].name + \" at line : \" + stack[i].line + \" ##\");\n            }\n        }\n    });\n\n    process.on(\"exit\", function(){\n\n        console.log(\"## [worker][%d] process about to exit ##\", workerId);\n    });\n\n    domain.run(function(){\n\n        try{\n\n            Cluster.ProcessRun(workerId);\n        }\n        catch(exception){\n\n            console.log(util.format(\"## [worker][%d] error call stack : \"+exception.stack+\" ##\", workerId));\n        }\n    });\n}\n\nCluster.ProcessRun = function(workerId){\n\n    app.set('port', process.env.PORT || config.serverConfig.port);\n\n    app.use(compression());\n    app.use(cookieParser(config.serverConfig.cookie_secret));\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({ extended: false }));\n    app.use(methodOverride());\n    app.set('trust proxy', config.serverConfig.trust_proxy_host);\n\n    redisService.Init(workerId);\n    sessionService.Init();\n    routesService.Init();\n    dbService.Init();\n\n    http.createServer(app).listen(app.get('port'), function () {\n        console.log(util.format('## [processRun] [pid:%d] [childNo:%d] Server running at %d ##', process.pid, workerId, config.serverConfig.port));\n    });\n}\n\nif(cluster.isMaster) Cluster.Master();\nelse Cluster.Worker(cluster.worker.id);\n"]}