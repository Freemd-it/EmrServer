{"version":3,"sources":["../../Controller/IotKakaoTalkMessageController.js"],"names":["express","require","bodyParser","async","util","friendTalkModel","router","Router","use","log","req","res","next","console","post","body","stamp","jsonString","deviceFlagValue","nev","rep","con","IotSendMessage","result","format","code","json","cmid","message","end","module","exports"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,aAAR,CAAjB;AACA,IAAIE,QAAQF,QAAQ,OAAR,CAAZ;AACA,IAAIG,OAAOH,QAAQ,MAAR,CAAX;;AAEA,IAAII,kBAAkBJ,QAAQ,6BAAR,CAAtB;;AAEA,IAAIK,SAASN,QAAQO,MAAR,EAAb;;AAEAD,OAAOE,GAAP,CAAW,SAASC,GAAT,CAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6B;AACpCC,YAAQJ,GAAR,CAAY,gDAAZ;AACAG;AACH,CAHD;;AAKAN,OAAOQ,IAAP,CAAY,OAAZ,EAAqB,UAASJ,GAAT,EAAcC,GAAd,EAAkB;;AAEtCE,YAAQJ,GAAR,CAAYC,IAAIK,IAAhB;;AAEG,QAAIC,QAAQ,MAAZ;AACA;AACA,QAAIC,aAAaP,IAAIK,IAArB;;AAEA,QAAIG,kBAAkBD,WAAW,SAAX,EAAsBE,GAAtB,CAA0BC,GAA1B,CAA8B,SAA9B,EAAyCC,GAA/D;AACAhB,oBAAgBiB,cAAhB,CAA+BJ,eAA/B,EAAgDF,KAAhD,EAAuD,UAASO,MAAT,EAAgB;;AAEnEV,gBAAQJ,GAAR,CAAYL,KAAKoB,MAAL,CAAY,qCAAZ,EAAmDD,OAAOE,IAA1D,CAAZ;AACAd,YAAIe,IAAJ,CAAS;AACLD,kBAAOF,OAAOE,IADT;AAELE,kBAAOJ,OAAOI,IAFT;AAGLC,qBAAUL,OAAOK;AAHZ,SAAT;AAKAjB,YAAIkB,GAAJ;AACH,KATD;AAUH,CAnBD;;AAqBAvB,OAAOQ,IAAP,CAAY,QAAZ,EAAsB,UAASJ,GAAT,EAAcC,GAAd,EAAkB;;AAEvCE,YAAQJ,GAAR,CAAYC,IAAIK,IAAhB;;AAEG,QAAIC,QAAQ,OAAZ;AACA;AACA,QAAIC,aAAaP,IAAIK,IAArB;;AAEA,QAAIG,kBAAkBD,WAAW,SAAX,EAAsBE,GAAtB,CAA0BC,GAA1B,CAA8B,SAA9B,EAAyCC,GAA/D;AACAhB,oBAAgBiB,cAAhB,CAA+BJ,eAA/B,EAAgDF,KAAhD,EAAuD,UAASO,MAAT,EAAgB;;AAEnEV,gBAAQJ,GAAR,CAAYL,KAAKoB,MAAL,CAAY,qCAAZ,EAAmDD,OAAOE,IAA1D,CAAZ;AACAd,YAAIe,IAAJ,CAAS;AACLD,kBAAOF,OAAOE,IADT;AAELE,kBAAOJ,OAAOI,IAFT;AAGLC,qBAAUL,OAAOK;AAHZ,SAAT;AAKAjB,YAAIkB,GAAJ;AACH,KATD;AAUH,CAnBD;;AAqBAvB,OAAOQ,IAAP,CAAY,OAAZ,EAAqB,UAASJ,GAAT,EAAcC,GAAd,EAAkB;;AAEtCE,YAAQJ,GAAR,CAAYC,IAAIK,IAAhB;;AAEG,QAAIC,QAAQ,MAAZ;AACD;AACC,QAAIC,aAAaP,IAAIK,IAArB;;AAEA,QAAIG,kBAAkBD,WAAW,SAAX,EAAsBE,GAAtB,CAA0BC,GAA1B,CAA8B,SAA9B,EAAyCC,GAA/D;AACAhB,oBAAgBiB,cAAhB,CAA+BJ,eAA/B,EAAgDF,KAAhD,EAAuD,UAASO,MAAT,EAAgB;;AAEnEV,gBAAQJ,GAAR,CAAYL,KAAKoB,MAAL,CAAY,qCAAZ,EAAmDD,OAAOE,IAA1D,CAAZ;AACAd,YAAIe,IAAJ,CAAS;AACLD,kBAAOF,OAAOE,IADT;AAELE,kBAAOJ,OAAOI,IAFT;AAGLC,qBAAUL,OAAOK;AAHZ,SAAT;AAKAjB,YAAIkB,GAAJ;AACH,KATD;AAUH,CAnBD;;AAqBAvB,OAAOQ,IAAP,CAAY,MAAZ,EAAoB,UAASJ,GAAT,EAAcC,GAAd,EAAkB;;AAErCE,YAAQJ,GAAR,CAAYC,IAAIK,IAAhB;;AAEG,QAAIC,QAAQ,KAAZ;AACD;AACC,QAAIC,aAAaP,IAAIK,IAArB;;AAEA,QAAIG,kBAAkBD,WAAW,SAAX,EAAsBE,GAAtB,CAA0BC,GAA1B,CAA8B,SAA9B,EAAyCC,GAA/D;AACAhB,oBAAgBiB,cAAhB,CAA+BJ,eAA/B,EAAgDF,KAAhD,EAAuD,UAASO,MAAT,EAAgB;;AAEnEV,gBAAQJ,GAAR,CAAYL,KAAKoB,MAAL,CAAY,qCAAZ,EAAmDD,OAAOE,IAA1D,CAAZ;AACAd,YAAIe,IAAJ,CAAS;AACLD,kBAAOF,OAAOE,IADT;AAELE,kBAAOJ,OAAOI,IAFT;AAGLC,qBAAUL,OAAOK;AAHZ,SAAT;AAKAjB,YAAIkB,GAAJ;AACH,KATD;AAUH,CAnBD;;AAqBAC,OAAOC,OAAP,GAAiBzB,MAAjB","file":"IotKakaoTalkMessageController.js","sourcesContent":["var express = require('express');\r\nvar bodyParser = require('body-parser');\r\nvar async = require(\"async\");\r\nvar util = require('util');\r\n\r\nvar friendTalkModel = require('../Model/FriendTalkModel.js');\r\n\r\nvar router = express.Router();\r\n\r\nrouter.use(function log(req, res, next) {\r\n    console.log('## [IOT] kakaoTalkMessageController started ##');\r\n    next();\r\n});\r\n\r\nrouter.post('/door', function(req, res){\r\n\r\n\tconsole.log(req.body);\r\n\r\n    var stamp = \"DOOR\";\r\n    //var jsonString = JSON.parse(req.body);\r\n    var jsonString = req.body;\r\n\r\n    var deviceFlagValue = jsonString['m2m:sgn'].nev.rep['m2m:cin'].con;\r\n    friendTalkModel.IotSendMessage(deviceFlagValue, stamp, function(result){\r\n\r\n        console.log(util.format(\"## MESSAGE SEND RESUT CODE >> %s ##\", result.code));\r\n        res.json({\r\n            code : result.code,\r\n            cmid : result.cmid,\r\n            message : result.message\r\n        })\r\n        res.end();\r\n    });\r\n});\r\n\r\nrouter.post('/light', function(req, res){\r\n\r\n\tconsole.log(req.body);\r\n\r\n    var stamp = \"LIGHT\";\r\n    //var jsonString = JSON.parse(req.body);\r\n    var jsonString = req.body;\r\n\r\n    var deviceFlagValue = jsonString['m2m:sgn'].nev.rep['m2m:cin'].con;\r\n    friendTalkModel.IotSendMessage(deviceFlagValue, stamp, function(result){\r\n\r\n        console.log(util.format(\"## MESSAGE SEND RESUT CODE >> %s ##\", result.code));\r\n        res.json({\r\n            code : result.code,\r\n            cmid : result.cmid,\r\n            message : result.message\r\n        })\r\n        res.end();\r\n    });\r\n});\r\n\r\nrouter.post('/dust', function(req, res){\r\n\r\n\tconsole.log(req.body);\r\n\r\n    var stamp = \"DUST\";\r\n\t  //var jsonString = JSON.parse(req.body);\r\n    var jsonString = req.body;\r\n\r\n    var deviceFlagValue = jsonString['m2m:sgn'].nev.rep['m2m:cin'].con;\r\n    friendTalkModel.IotSendMessage(deviceFlagValue, stamp, function(result){\r\n\r\n        console.log(util.format(\"## MESSAGE SEND RESUT CODE >> %s ##\", result.code));\r\n        res.json({\r\n            code : result.code,\r\n            cmid : result.cmid,\r\n            message : result.message\r\n        })\r\n        res.end();\r\n    });\r\n});\r\n\r\nrouter.post('/gas', function(req, res){\r\n\r\n\tconsole.log(req.body);\r\n\r\n    var stamp = \"GAS\";\r\n\t  //var jsonString = JSON.parse(req.body);\r\n    var jsonString = req.body;\r\n\r\n    var deviceFlagValue = jsonString['m2m:sgn'].nev.rep['m2m:cin'].con;\r\n    friendTalkModel.IotSendMessage(deviceFlagValue, stamp, function(result){\r\n\r\n        console.log(util.format(\"## MESSAGE SEND RESUT CODE >> %s ##\", result.code));\r\n        res.json({\r\n            code : result.code,\r\n            cmid : result.cmid,\r\n            message : result.message\r\n        })\r\n        res.end();\r\n    });\r\n});\r\n\r\nmodule.exports = router;\r\n"]}